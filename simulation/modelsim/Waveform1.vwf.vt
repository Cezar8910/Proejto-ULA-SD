// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/03/2024 15:36:33"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Circuitao
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Circuitao_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [4:0] A;
reg [4:0] B;
reg [2:0] S;
// wires                                               
wire a_dez;
wire a_uni;
wire b_dez;
wire b_uni;
wire c_dez;
wire c_uni;
wire d_dez;
wire d_uni;
wire e_dez;
wire e_uni;
wire [4:0] F;
wire f_dez;
wire f_uni;
wire g_dez;
wire g_uni;
wire led_sinal_soma;
wire led_status;

// assign statements (if any)                          
Circuitao i1 (
// port map - connection between master ports and signals/registers   
	.A(A),
	.a_dez(a_dez),
	.a_uni(a_uni),
	.B(B),
	.b_dez(b_dez),
	.b_uni(b_uni),
	.c_dez(c_dez),
	.c_uni(c_uni),
	.d_dez(d_dez),
	.d_uni(d_uni),
	.e_dez(e_dez),
	.e_uni(e_uni),
	.F(F),
	.f_dez(f_dez),
	.f_uni(f_uni),
	.g_dez(g_dez),
	.g_uni(g_uni),
	.led_sinal_soma(led_sinal_soma),
	.led_status(led_status),
	.S(S)
);
initial 
begin 
#1000000 $stop;
end 
endmodule

