// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/04/2024 12:31:11"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Display_Dezenas
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Display_Dezenas_vlg_vec_tst();
// constants                                           
// general purpose registers
reg F0;
reg F1;
reg F2;
reg F3;
reg F4;
// wires                                               
wire F10;
wire F11;
wire F12;
wire F13;
wire F14;
wire F15;
wire F16;

// assign statements (if any)                          
Display_Dezenas i1 (
// port map - connection between master ports and signals/registers   
	.F0(F0),
	.F1(F1),
	.F2(F2),
	.F3(F3),
	.F4(F4),
	.F10(F10),
	.F11(F11),
	.F12(F12),
	.F13(F13),
	.F14(F14),
	.F15(F15),
	.F16(F16)
);
initial 
begin 
#1000000 $finish;
end 

// F4
initial
begin
	F4 = 1'b0;
end 

// F3
initial
begin
	F3 = 1'b0;
end 

// F2
initial
begin
	F2 = 1'b1;
end 

// F1
initial
begin
	F1 = 1'b1;
end 

// F0
initial
begin
	F0 = 1'b0;
end 
endmodule

